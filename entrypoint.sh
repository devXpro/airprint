#!/bin/bash
set -e

# Default printer IP if not provided
PRINTER_IP=${PRINTER_IP:-192.168.1.100}
PRINTER_NAME=${PRINTER_NAME:-Epson_L3250}
PRINTER_LOCATION=${PRINTER_LOCATION:-Home}
PRINTER_INFO=${PRINTER_INFO:-"Epson L3250 AirPrint"}
HOST_NAME=${HOST_NAME:-localhost}
CUPS_USER=${CUPS_USER:-admin}
CUPS_PASSWORD=${CUPS_PASSWORD:-admin}

echo "Printer IP: ${PRINTER_IP}"
echo "Printer name: ${PRINTER_NAME}"
echo "Host name: ${HOST_NAME}"
echo "CUPS user: ${CUPS_USER}"

# Create CUPS admin user unconditionally
echo "Setting up CUPS admin user: ${CUPS_USER}"
useradd -r -G lpadmin -m $CUPS_USER 2>/dev/null || true
echo "${CUPS_USER}:${CUPS_PASSWORD}" | chpasswd
echo "CUPS admin user configured."

# Update Avahi service configuration with correct hostname
echo "Updating Avahi service configuration with hostname: ${HOST_NAME}"
sed -i "s/localhost/${HOST_NAME}/g" /etc/avahi/services/airprint.service
sed -i "s/%h/${HOST_NAME}/g" /etc/avahi/services/airprint.service

# Ensure hostname is set properly for Avahi by creating /etc/hostname with the proper hostname
echo "${HOST_NAME}" > /etc/hostname
hostname "${HOST_NAME}"

# Start Avahi daemon but handle MacOS host network differently
echo "Starting Avahi daemon..."
# Clean any existing PID files that might cause problems
mkdir -p /run/dbus
rm -f /run/dbus/pid
mkdir -p /run/avahi-daemon
rm -f /run/avahi-daemon/pid

# Start dbus first (required for Avahi)
dbus-daemon --system &
DBUS_PID=$!
sleep 3  # Give dbus more time to start

# Start Avahi daemon
avahi-daemon --no-chroot &
AVAHI_PID=$!
sleep 3  # Give avahi more time to start

# Verify avahi is running
if ! pgrep avahi-daemon > /dev/null; then
    echo "ERROR: avahi-daemon failed to start"
else
    echo "avahi-daemon is running"
fi

# Now start CUPS after Avahi is fully established
echo "Starting CUPS daemon..."
mkdir -p /run/cups  # Ensure directory exists
rm -f /run/cups/cupsd.pid  # Remove stale PID file if exists
cupsd -f &
CUPS_PID=$!

echo "Waiting for CUPS to start..."
sleep 5  # Give CUPS more time to start fully

echo "Configuring printer..."

# Set up the printer by directly creating a printers.conf file
echo "Setting up printer configuration directly..."
cat > /etc/cups/printers.conf << EOF
# Printer configuration file for CUPS
# Written by entrypoint.sh
# Do not edit this file directly - use lpadmin instead

<DefaultPrinter ${PRINTER_NAME}>
UUID urn:uuid:$(cat /proc/sys/kernel/random/uuid)
Info ${PRINTER_INFO}
Location ${PRINTER_LOCATION}
MakeModel Epson L3250 - CUPS+Gutenprint
DeviceURI socket://${PRINTER_IP}:9100
State Idle
StateTime $(date +%s)
ConfigTime $(date +%s)
Type 8425684
Accepting Yes
Shared Yes
JobSheets none none
QuotaPeriod 0
PageLimit 0
KLimit 0
OpPolicy default
ErrorPolicy stop-printer
</DefaultPrinter>
EOF

# Fix permissions
chown root:lp /etc/cups/printers.conf
chmod 640 /etc/cups/printers.conf

# Restart CUPS to apply changes
echo "Restarting CUPS to apply printer configuration..."
kill $CUPS_PID
sleep 2
rm -f /run/cups/cupsd.pid  # Remove stale PID file if exists
cupsd -f &
CUPS_PID=$!
sleep 3

# List printers to verify
echo "Available printers:"
lpstat -v || echo "CUPS is not responding, but we will continue anyway"

echo "CUPS interface available at http://${HOST_NAME}:631"
echo "CUPS admin login: ${CUPS_USER} / ${CUPS_PASSWORD}"

# Keep the container running
echo "Services started. Press Ctrl+C to stop..."
wait $CUPS_PID $AVAHI_PID $DBUS_PID

